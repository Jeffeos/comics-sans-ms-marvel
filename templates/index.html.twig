{% extends "base.html.twig" %}

    {% block pageTitle %}comics sans ms marvel{% endblock %}

    {% block body %}
        <div class="row justify-content-center">
            <button id="favourite-button" onclick="displayFavourites()" class="btn btn-warning m-3">
                Only display favourite characters
            </button>
        </div>

        <div class="container">
            <div class="row justify-content-center">
                {% for character in characters %}
                    <div id="{{ character.id }}-card"
                         class="card col col-12 col-sm-3 mx-3 my-3 p-0 position-relative normal-character">
                        <button onclick="addCharacterToFavourites({{ character.id }})" class="btn position-absolute p-0 m-1" title="Mark as favourite character">
                            <svg id="{{ character.id }}-svg" xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                 fill="currentColor" class="bi bi-star-fill text-secondary" viewBox="0 0 16 16">
                                <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
                            </svg>
                        </button>
                        <img class="card-img-top" src="{{ character.picture }}/standard_xlarge.jpg"
                             alt="{{ character.name }}'s picture">
                        <div class="card-body">
                            <a href="/character/{{ character.id }}"
                               class="btn btn-warning d-flex justify-content-center">{{ character.name }}</a>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    {% endblock %}

    {% block javascripts %}
        <script>
            let numberOfFavourites = 0;

            function addCharacterToFavourites(id) {
                let iconId = document.getElementById(id + '-svg');
                let characterDiv = document.getElementById(id + '-card');

                if (!characterDiv.classList.contains('favourite-character')) {
                    if (numberOfFavourites === 5) {
                        alert('You already selected 5 characters, please remove one before choosing a new character')
                    } else {
                        iconId.classList.replace('text-secondary', 'text-warning');
                        characterDiv.classList.replace('normal-character', 'favourite-character');
                        numberOfFavourites++;
                    }
                } else if (characterDiv.classList.contains('favourite-character')) {
                    iconId.classList.replace('text-warning', 'text-secondary');
                    characterDiv.classList.replace('favourite-character', 'normal-character');
                    numberOfFavourites--;
                }
            }

            function displayFavourites() {
                if (numberOfFavourites < 1) {
                    alert("You don't have any favourite character, please select up to 5 characters by clicking on the star icon");
                } else {
                    let normalCharacters = document.getElementsByClassName('normal-character');
                    let favouriteButton = document.getElementById('favourite-button');
                    favouriteButton.classList.toggle('display-fav-on');

                    if (!favouriteButton.classList.contains('display-fav-on') && favouriteButton.classList.contains('btn-secondary')) {
                        favouriteButton.classList.replace('btn-secondary', 'btn-warning');
                        favouriteButton.innerText= 'Only display favourite characters';
                        for (let i = 0; i < normalCharacters.length; i++) {
                            normalCharacters[i].style.display = 'block';
                        }
                    } else if (favouriteButton.classList.contains('display-fav-on') && favouriteButton.classList.contains('btn-warning')) {
                        favouriteButton.classList.replace('btn-warning', 'btn-secondary');
                        favouriteButton.innerText = 'Display all characters';
                        for (let i = 0; i < normalCharacters.length; i++) {
                            normalCharacters[i].style.display = 'none';
                        }
                    }
                }
            }        </script>
    {% endblock %}
